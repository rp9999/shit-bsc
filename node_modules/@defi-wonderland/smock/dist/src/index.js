"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.smock = void 0;
const hardhat_1 = __importDefault(require("hardhat"));
const matchers_1 = require("./chai-plugin/matchers");
require("./chai-plugin/types");
const sandbox_1 = require("./sandbox");
const utils_1 = require("./utils");
let sandbox;
async function fake(spec, opts = {}) {
    if (!sandbox)
        await init();
    return await sandbox.fake(spec, opts);
}
async function mock(contractName, signerOrOptions) {
    if (!sandbox)
        await init();
    return await sandbox.mock(contractName, signerOrOptions);
}
async function init() {
    sandbox = await sandbox_1.Sandbox.create();
    (await utils_1.getHardhatBaseProvider(hardhat_1.default)).on('hardhatNetworkReset', async () => {
        sandbox = await sandbox_1.Sandbox.create();
    });
}
__exportStar(require("./types"), exports);
exports.smock = { fake, mock, matchers: matchers_1.matchers };
//# sourceMappingURL=index.js.map